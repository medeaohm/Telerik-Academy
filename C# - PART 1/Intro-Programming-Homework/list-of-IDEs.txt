### Problem 12.	Development Environments
*	Perform a research (e.g. in Google or Wikipedia) and provide a short list with popular development environments (IDEs) like Visual Studio.
*	Write in a text file called `“list-of-IDEs.txt”` at least five IDEs along with 2-3 sentences about each of them. Use English.


1. Visual Studio Express

Visual Studio has an advantage when it comes to programming. This IDE is mostly used by corporate programmers to produce .NET code. Sometimes people want to try the product without investing thousands of dollars first, so Microsoft has the Express editions for all of their products. This makes it perfect for casual users that want to hack out some code as a hobby or programmers who need a free solution to code in C#. Be warned though, if the application developed by someone using the express versions of Visual Studio takes off and starts making money it would not be surprising to see big brother step in and start asking questions.
The advantages are:
	* Intellisense: Intellisense is Microsoft’s way to make programming in .NET as painless as possible. When you start programming in Visual Studios IDE you will notice a suggestion box will appear when you start typing anything within the IDE, this is to notify the user what methods and functions are available. When clicking on one of the methods in the suggestion box the environment will tell you exactly what the method will do and how many and what parameters are needed. 
	* Automatic code formatting: when you start coding a method and go to enter the “{“ brackets, the code inside those brackets will actually indent to the right. A very handy feature for a code monkey who is just looking to get the program done. As well, there are options to enhance the colors to see variables as a different color than a method header. 
	* Extensibility: Something that you don’t like about Visual Studio? Code a new tool for it or use one of the many available to the developers using Visual Studio Gallery. 



2.Eclipse

This is the best alternative if you are not a big fan of Microsoft’s Visual Studio. The interface is a lot cleaner and concise than Visual Studio and the languages that are possible to use extend past the .Net Framework. Besides being the number on way to develop Android applications via the Android SDK, it is fully extensible to use languages such as Ruby, C, C++ and many many more.
The advantages are:
	*Language Extensibility: the languages mentioned above are not limited by Microsoft and anyone is free to develop plug-ins for different languages and to make the development environment easier to use. Also, the ability to use this on Linux is a great sway for many people who don’t like to be bound by Microsoft’s operating systems and like full control of their OS.
	*Free: besides being fully customizable and extensible, the next best thing about eclipse is it’s free. This is good news for hobbyists and casual programmers wanting to just hack out some code in their free time.



3.Netbeans

The is the number one alternative to Eclipse. This program is extensible and free, and it compiles code which is a bonus. When installing Netbeans it comes with a Java server called GlassFish that you could deploy on your computer for your testing environment. This server is the second biggest server for Java next to WebSphere .
The advantages of Netbeans are:
	* Extensible:Again, extensibility is a must have for the development environments out there to survive. Instead of having multiple programs for multiple different languages combining them into one program gains recognition from developers and the software programs that combine it all but the kitchen sink are utilized more often because of the simplicity and ease of access to the languages developers want.
	* It compiles Code
	* It's free



4.Gedit

Gedit is the official editor of the gnome desktop and comes installed once the system is setup. Very useful for the user that is casually editing code and not undertaking major projects. This would be a good companion to Netbeans or Eclipse. Almost gedit isn't able to compile code, it have several advantages:
	* Uses Linux
	* Already Installed on gnome systems
	* Code Highlighting: gedit offers the ability to highlight your code and figure out where the bugs are by giving you a fresh perspective. This can also be used for web development. While it may not do almost everything like Netbeans or eclipse, it is a handy tool to have on the computer.
	* Tabbed: this feature allows multiple source packages open at once to jump back and forth between if need be. This is a highly useful when comparing documents and debugging code.



5. Kate

Kate is a text editor. Not to be looked down upon as it does a lot more than a regular text edit can do and that is what makes this an indispensable product. Like getid, Kate cannot compile code. Despite, the advantages are:
	* Uses Linux
	* Code Folding: this is probably one of the best features for kate. There is a small column to the left of the code. Any line that is an opening bracket that column will have an arrow next to it. If you click the arrow it will fold all of the code between the opening and closing brackets. Very useful for large source packages.


### Problem 11.	Programming Languages
*	Perform a research (e.g. in Google or Wikipedia) and provide a short list with information about the most popular programming languages. How similar are they to C#? How do they differ from C#?
*	Write in a text file called `“programming-languages.txt”` at least five languages along with 2-3 sentences about each of them. Use English.


1.Java
Java is a concurrent, class-based and object-oriented general-purpose computer programming language. Java is also specifically designed to have as few implementation dependencies as possible: it is intended to let application developers "write once, run anywhere" (WORA), i.e. code that runs on one platform does not need to be recompiled to run on another.
There were five primary goals in the creation of the Java language:
	1. It must be "simple, object-oriented and familiar"
	2. It must be "robust and secure"
	3. It must be "architecture-neutral and portable"
	4. It must execute with "high performance"
	5. It must be "interpreted, threaded, and dynamic"


2. C
C is a general-purpose programming language initially developed between 1969 and 1973 at AT&T Bell Labs.  C has facilities for structured programming and allows lexical variable scope and recursion. Its design provides constructs that map efficiently to typical machine instructions, and therefore it has found lasting use in applications that had formerly been coded in assembly language, most notably system software like the Unix computer operating system.
In C, all executable code is contained within subroutines, which are called "functions" (although not in the strict sense of functional programming). Function parameters are always passed by value. Pass-by-reference is simulated in C by explicitly passing pointer values. C program source text is free-format, using the semicolon as a statement terminator and curly braces for grouping blocks of statements.


3. C++
C++ is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing the facilities for low-level memory manipulation. The name signifies the evolutionary nature of the changes from C.
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:
	1.It must be driven by actual problems and its features should be useful immediately in real world programs.
	2.Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
	3.Allowing a useful feature is more important than preventing every possible misuse of C++.
	4.It should provide facilities for organising programs into well-defined separate parts, and provide facilities for combining separately developed parts.
	5.Any features that you do not use you do not pay for.
	6.There should be no language beneath C++ (except assembly language).
	7.C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
	8.If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).


4. Python
Python is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java. The language provides constructs intended to enable clear programs on both a small and large scale.
Python supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles. It features a dynamic type system and automatic memory management and has a large and comprehensive standard library.
The core philosophy of the language is summarized by the document "PEP 20 (The Zen of Python)", which includes aphorisms such as:
	1.Beautiful is better than ugly
	2.Explicit is better than implicit
	3.Simple is better than complex
	4.Complex is better than complicated
	5.Readability counts


5. PHP
PHP is a general-purpose scripting language that is especially suited to server-side web development, in which case PHP generally runs on a web server. Any PHP code in a requested file is executed by the PHP runtime, usually to create dynamic web page content or dynamic images used on websites or elsewhere. It can also be used for command-line scripting and client-side graphical user interface (GUI) applications. PHP can be deployed on most web servers, many operating systems and platforms, and can be used with many relational database management systems (RDBMS). Most web hosting providers support PHP for use by their clients. It is available free of charge, and the PHP Group provides the complete source code for users to build, customize and extend for their own use.
PHP acts primarily as a filter, taking input from a file or stream containing text and/or PHP instructions and outputting another stream of data. Most commonly the output will be HTML, although it could be JSON, XML or binary data such as image or audio formats. .
